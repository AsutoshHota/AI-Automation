json
{
	"nodes": [
		{
			"parameters": {},
			"name": "Start",
			"type": "n8n-nodes-base.start",
			"typeVersion": 1,
			"position": [
				240,
				300
			]
		},
		{
			"parameters": {
				"options": {}
			},
			"name": "Form Input",
			"type": "n8n-nodes-base.webhook",
			"typeVersion": 1,
			"position": [
				460,
				300
			],
			"webhookId": "your_unique_webhook_id"
		},
		{
			"parameters": {
				"functionCode": "const formData = $input.first().json;\n\n// Example Validation (Modify based on actual input fields)\nif(!formData.contractName || formData.contractName.trim() === '') {\n    throw new Error('Contract Name is required.');\n}\nif(!formData.clientName || formData.clientName.trim() === '') {\n    throw new Error('Client Name is required.');\n}\nif(!formData.serviceCategory || formData.serviceCategory.trim() === '') {\n    throw new Error('Service Category is required.');\n}\n\nreturn [\n  {\n    json: formData\n  }\n];"
			},
			"name": "Data Validation",
			"type": "n8n-nodes-base.function",
			"typeVersion": 1,
			"position": [
				720,
				300
			]
		},
		{
			"parameters": {
				"values": [
					{
						"name": "contractName",
						"value": "={{$json.contractName}}"
					},
          {
						"name": "clientName",
						"value": "={{$json.clientName}}"
					},
					{
						"name": "serviceCategory",
						"value": "={{$json.serviceCategory}}"
					},
          {
						"name": "serviceRequirements",
						"value": "={{$json.serviceRequirements}}"
					},
          {
						"name": "clientCriteria",
						"value": "={{$json.clientCriteria}}"
					}
				]
			},
			"name": "Set Form Data",
			"type": "n8n-nodes-base.set",
			"typeVersion": 1,
			"position": [
				960,
				300
			]
		},
    {
			"parameters": {
				"authentication": "headerAuth",
        "url": "https://api.example.com/historical-sow",
        "options": {}
			},
			"name": "Fetch Historical SoW",
			"type": "n8n-nodes-base.httpRequest",
			"typeVersion": 1,
			"position": [
				960,
        450
			]
		},
    {
      "parameters": {
        "functionCode": "const historicalData = $input.item.json;\nconst formData = $input.item(0).json;\n\nlet content = '';\n\n// Example analysis of historical data and dynamic clause generation\nif(formData.serviceCategory === 'Consulting'){\n    content += '### Consulting Services Clause ###\\n';\n   // Logic to extract matching content from historicalData and insert it dynamically based on category\n}\nelse if(formData.serviceCategory === 'Development'){\n     content += '### Development Services Clause ###\\n';\n     //Logic to extract content from historical data and insert it dynamically\n}\n\n\nreturn [\n  {\n    json: {\n    ...formData,\n    historicalData: historicalData,\n    dynamicContent: content\n   }\n  }\n];"
      },
      "name": "Analyze Historical Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
				1200,
				300
			]
    },
		{
			"parameters": {
				"documentId": "your_google_doc_template_id",
				"templateType": "document",
				"values": [
					{
						"key": "{{$json.contractName}}",
						"value": "{{$json.contractName}}"
					},
          {
						"key": "{{$json.clientName}}",
						"value": "{{$json.clientName}}"
					},
          {
            "key":"{{$json.dynamicContent}}",
            "value": "{{$json.dynamicContent}}"
          }
          ,
					{
						"key": "{{$json.serviceRequirements}}",
						"value": "{{$json.serviceRequirements}}"
					},
          {
						"key": "{{$json.clientCriteria}}",
						"value": "{{$json.clientCriteria}}"
					}

				],
				"output": "create"
			},
			"name": "Google Docs Integration",
			"type": "n8n-nodes-base.googleSheets",
			"typeVersion": 1,
			"position": [
				1440,
				300
			]
		},
		{
			"parameters": {
				"toEmails": [
					"approver@example.com"
				],
				"subject": "New SoW Document for Approval: {{$json.contractName}}",
				"text": "A new Scope of Work document has been generated and requires your approval. Please review the attached document.",
				"attachmentsUi": {
					"attachments": [
						{
							"mode": "binary",
							"binaryPropertyName": "data"
						}
					]
				}
			},
			"name": "Email Notification",
			"type": "n8n-nodes-base.emailSend",
			"typeVersion": 1,
			"position": [
				1680,
				300
			]
		},
    {
      "parameters": {
        "bucket": "your_sow_archive_bucket",
        "fileName": "sow_{{$json.contractName}}_{{$now}}.pdf",
				"fileType": "pdf"
			},
      "name": "Cloud Storage Archive",
      "type": "n8n-nodes-base.s3",
      "typeVersion": 1,
      "position": [
				1680,
				450
			]
    }
	],
	"connections": {
		"Start": {
			"main": [
				[
					"Form Input",
					0
				]
			]
		},
		"Form Input": {
			"main": [
				[
					"Data Validation",
					0
				]
			]
		},
		"Data Validation": {
			"main": [
				[
					"Set Form Data",
					0
				]
			]
		},
    "Set Form Data": {
      "main": [
        [
          "Analyze Historical Data",
          0
        ]
      ]
    },
    "Fetch Historical SoW": {
      "main": [
        [
           "Analyze Historical Data",
          1
        ]
      ]
    },
    "Analyze Historical Data":{
      "main":[
        [
          "Google Docs Integration",
          0
        ]
      ]
    },
		"Google Docs Integration": {
			"main": [
				[
					"Email Notification",
					0
				],
        [
          "Cloud Storage Archive",
          0
        ]
			]
		}
	}
}


